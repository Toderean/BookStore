
*** src/inventory.rs:141:9: replace Inventory::sell_book -> Result<(), Box<dyn Error>> with Ok(())

*** mutation diff:
--- src/inventory.rs
+++ replace Inventory::sell_book -> Result<(), Box<dyn Error>> with Ok(())
@@ -133,22 +133,17 @@
         }
     }
 
     pub fn sell_book(
         &mut self,
         book_index: usize,
         sell_quantity: u32,
     ) -> Result<(), Box<dyn Error>> {
-        if &sell_quantity == &self.books[book_index].quantity {
-            self.remove(book_index)
-        } else {
-            self.books[book_index].quantity -= sell_quantity;
-        }
-        Ok(())
+        Ok(()) /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn save(&self) -> Result<(), Box<dyn Error>> {
         let mut path = OpenOptions::new().write(true).open(PATH)?;
         let serialized = serde_json::to_string(&self)?;
 
         path.seek(std::io::SeekFrom::Start(0))?;
         path.set_len(0)?;


*** /home/tode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-book_store-jOhHXK.tmp/Cargo.toml
   Compiling book_store v1.0.0 (/tmp/cargo-mutants-book_store-jOhHXK.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 0.17s

*** result: Success

*** /home/tode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-book_store-jOhHXK.tmp/Cargo.toml
    Finished test [unoptimized + debuginfo] target(s) in 0.00s
     Running unittests src/lib.rs (target/debug/deps/book_store-dcbdbf2fee7dd28a)

running 14 tests
test tests::tests::test_add_max_capacity ... ok
test tests::tests::test_get_index ... ok
test tests::tests::test_remove_book ... ok
test tests::tests::test_non_existing_book ... ok
test tests::tests::test_add_book ... ok
test tests::tests::test_display_books ... ok
test tests::tests::test_invalid_json_file_2 ... ok
test tests::tests::test_sell_book ... FAILED
test tests::tests::test_sell_book_2 ... FAILED
test tests::tests::test_invalid_json_file ... ok
test tests::tests::test_sell_more_than_available_2 ... ok
test tests::tests::test_update_book_1 ... ok
test tests::tests::test_sell_more_than_available ... ok
test tests::tests::test_update_book ... ok

failures:

---- tests::tests::test_sell_book stdout ----
thread 'tests::tests::test_sell_book' panicked at src/tests.rs:93:9:
assertion `left == right` failed
  left: 10
 right: 5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- tests::tests::test_sell_book_2 stdout ----
thread 'tests::tests::test_sell_book_2' panicked at src/tests.rs:102:9:
assertion `left == right` failed
  left: 15
 right: 1


failures:
    tests::tests::test_sell_book
    tests::tests::test_sell_book_2

test result: FAILED. 12 passed; 2 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

error: test failed, to rerun pass `--lib`

*** result: Failure(101)
