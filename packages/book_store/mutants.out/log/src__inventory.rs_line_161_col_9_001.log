
*** src/inventory.rs:161:9: replace Inventory::get_index -> Option<usize> with Some(0)

*** mutation diff:
--- src/inventory.rs
+++ replace Inventory::get_index -> Option<usize> with Some(0)
@@ -153,13 +153,11 @@
         path.seek(std::io::SeekFrom::Start(0))?;
         path.set_len(0)?;
         path.write_all(&serialized.as_bytes())?;
 
         Ok(())
     }
 
     pub fn get_index(&self, book: &str) -> Option<usize> {
-        self.books
-            .iter()
-            .position(|x| x.title.to_lowercase() == book.to_lowercase())
+        Some(0) /* ~ changed by cargo-mutants ~ */
     }
 }


*** /home/tode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-book_store-MpZ23b.tmp/Cargo.toml
   Compiling book_store v1.0.0 (/tmp/cargo-mutants-book_store-MpZ23b.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 0.15s

*** result: Success

*** /home/tode/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-book_store-MpZ23b.tmp/Cargo.toml
    Finished test [unoptimized + debuginfo] target(s) in 0.00s
     Running unittests src/lib.rs (target/debug/deps/book_store-dcbdbf2fee7dd28a)

running 14 tests
test tests::tests::test_display_books ... ok
test tests::tests::test_add_max_capacity ... ok
test tests::tests::test_invalid_json_file_2 ... ok
test tests::tests::test_add_book ... ok
test tests::tests::test_non_existing_book ... FAILED
test tests::tests::test_get_index ... ok
test tests::tests::test_invalid_json_file ... ok
test tests::tests::test_sell_book_2 ... FAILED
test tests::tests::test_sell_book ... ok
test tests::tests::test_sell_more_than_available ... ok
test tests::tests::test_update_book ... ok
test tests::tests::test_sell_more_than_available_2 ... ok
test tests::tests::test_remove_book ... FAILED
test tests::tests::test_update_book_1 ... ok

failures:

---- tests::tests::test_non_existing_book stdout ----
thread 'tests::tests::test_non_existing_book' panicked at src/tests.rs:151:9:
assertion `left == right` failed
  left: Some(0)
 right: None
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- tests::tests::test_sell_book_2 stdout ----
thread 'tests::tests::test_sell_book_2' panicked at src/inventory.rs:144:13:
attempt to subtract with overflow

---- tests::tests::test_remove_book stdout ----
thread 'tests::tests::test_remove_book' panicked at src/tests.rs:55:9:
assertion `left == right` failed
  left: Some(0)
 right: None


failures:
    tests::tests::test_non_existing_book
    tests::tests::test_remove_book
    tests::tests::test_sell_book_2

test result: FAILED. 11 passed; 3 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

error: test failed, to rerun pass `--lib`

*** result: Failure(101)
